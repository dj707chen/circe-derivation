package io.circe.examples

import org.scalacheck.{ Arbitrary, Gen }

object TestValueGeneration extends App {

  val genAdt: Gen[Adt] =
    Gen.oneOf(
      for {
        i <- Arbitrary.arbitrary[Int]
        s <- Arbitrary.arbitrary[String]
      } yield AdtFoo(i, s),

      Arbitrary.arbitrary[List[Boolean]].map(AdtBar),

      Gen.const(AdtQux)
    )

  println("Sample values generated by genAdt:")
  for {
    ind              <- Range.inclusive(1, 10)
    vAdt: Option[Adt] = genAdt.sample
    _                 = println(s"$ind: $vAdt")
  } yield ()

}
